@page "/"
@using JobSearchAssistant.Shared
@inject AuthenticationStateProvider authprovider
@inject JobSearchAssistant.Client.Services.IJobService JobService
@inject JobSearchAssistant.Client.Services.IEventService EventService


<AuthorizeView>
    <Authorized>
        <h2 class="title">Welcome to Job Search Assistant!</h2>
        <br />
        <br />
        <br />
        @if (jobs.Count == 1)
        {
            <h4>You have: @jobs.Count() job application in progress.</h4>
        }
        else if (jobs.Count > 1)
        {
            <h4>You have: @jobs.Count() job applications in progress.</h4>
        }
        else
        {
            <h4>You have no job applications in progess.</h4>
        }
        @if (jobEvents.Count == 1)
        {
            <h4>You have: @jobEvents.Count() upcoming event.</h4>
        }
        else if (jobEvents.Count > 1)
        {
            <h4>You have: @jobEvents.Count() upcoming events.</h4>
        }
        else
        {
        <h4>You have no upcoming events.</h4>
        }
    </Authorized>
    <NotAuthorized>

        <h1 class="title">Welcome to Job Search Assistant!</h1>

        <p class="center-text">This web app helps you store and keep track of all important information concering your job applications.</p>
        <br />
        <br />
        <h3 class="center-text">Please register an account or log in to take part!</h3>

    </NotAuthorized>
</AuthorizeView>

@code {
    public string CurrentUserId;
    private List<Job> jobs = new List<Job>();
    private List<Event> jobEvents = new List<Event>();
    bool authorized = false;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        var authState = await authprovider.GetAuthenticationStateAsync();
        if (authState.User.Identity.IsAuthenticated)
        {
            var claims = authState.User.Claims.ToList();
            CurrentUserId = claims[2].Value;
            jobs = await JobService.GetJobsByUserId(CurrentUserId);
            jobEvents = await EventService.GetEventsByUserId(CurrentUserId);
        }
    }
}